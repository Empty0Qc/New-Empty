/*
小包最近迷上了一款叫做雀魂的麻将游戏，但是这个游戏规则太复杂，小包玩了几个月了还是输多赢少。
于是生气的小包根据游戏简化了一下规则发明了一种新的麻将，只留下一种花色，并且去除了一些特殊和牌方式（例如七对子等），具体的规则如下：

总共有36张牌，每张牌是1~9。每个数字4张牌。
你手里有其中的14张牌，如果这14张牌满足如下条件，即算作和牌
14张牌中有2张相同数字的牌，称为雀头。
除去上述2张牌，剩下12张牌可以组成4个顺子或刻子。顺子的意思是递增的连续3个数字牌（例如234,567等），刻子的意思是相同数字的3个数字牌（例如111,777）

例如：
1 1 1 2 2 2 6 6 6 7 7 7 9 9 可以组成1,2,6,7的4个刻子和9的雀头，可以和牌
1 1 1 1 2 2 3 3 5 6 7 7 8 9 用1做雀头，组123,123,567,789的四个顺子，可以和牌
1 1 1 2 2 2 3 3 3 5 6 7 7 9 无论用1 2 3 7哪个做雀头，都无法组成和牌的条件。

现在，小包从36张牌中抽取了13张牌，他想知道在剩下的23张牌中，再取一张牌，取到哪几种数字牌可以和牌。*/

#include<iostream>
using namespace std;

int  DoCheck(int arr[],)

int main()
{
	int i = 0;
	int arr = new int[14];
	int b[10] = {0};
	int tmp[10] = {0};
	while(i < 13 && cin >> arr[i])
	{
		b[arr[i++]]++;
	}
	for(int j = 1; j < 10; j++)
	{
		strncpy();
		cout << DoCheck(arr,j);
	}
	return 0;
}

/*
1. 什么是菱形继承？菱形继承的问题是什么？
2. 什么是菱形虚拟继承？如何解决数据冗余和二义性的
3. 继承和组合的区别？什么时候用继承？什么时候用组合？
4. 多继承中指针偏移问题？
*/







3%g2%u##

guuguuguu
3%acm#2%acm#

acmacmacmacmacmacm

0 1

3 3

0 1 0
1 0 0
1 0 1

2




0 1 2 3 4 5  6  7  8  9   10
1 1 3 5 9 15 25 41 67 109 177
1 1 2 3 5 8  13 21 34 55  89  144


#include <stdio.h>

void countnum(char * a, int y, int si, int sj)
{
	int i, j;
	
	if(a[(y + 2) * si + sj] == 0)
	{
		return;
	}
	a[(y + 2) * si + sj] = 0;
	
	for(i = si - 1; i <= si + 1; i++)
	{
		for(j = sj - 1; j <= sj + 1; j++)
		{
			countnum(a, y, i, j);
		}
	}
}

int main()
{
	char a[1010000] = { 0 };
	int i, j;
	int x, y;
	int count = 0;
	
	scanf("%d%d", &x, &y);
	
	for(i = 1; i <= x; i++)
	{
		for(j = 1; j <= y; j++)
		{
			scanf("%d", &a[(y + 2) * i + j]);
		}
	}
	
	for(i = 1; i <= x; i++)
	{
		for(j = 1; j <= y; j++)
		{
			if(a[(y + 2) * i + j])
			{
				count++;
				countnum(a, y, i, j);
			}
		}
	}
	
	printf("%d", count);
	return 0;
}




